import os

from vk_api import VkApi
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType

from db_handler.db_data import (
    save_favorite,
    get_favorites_from_db,
    save_user_state,
    load_user_state,
    ensure_user_exists
)

from keyboards.keyboards import preferences_kb, view_kb
from handlers.functions import (
    send_message, 
    send_messageEvAns, 
    find_candidates,
    send_current_candidate
)


# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
group_id_ = os.getenv('GROUP_ID')
group_token = os.getenv('group_token')
placeholder = os.getenv('PLACEHOLDER')

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è VK
vk_gr_session = VkApi(token=group_token)
vk_gr = vk_gr_session.get_api()


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LongPoll
longpoll = VkBotLongPoll(vk_gr_session, group_id=group_id_)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞
for event in longpoll.listen():
    if event.t == VkBotEventType.MESSAGE_NEW:
        user_name = vk_gr.users.get(user_id=event.obj['message']['from_id'])[0]['first_name']
        send_message(
            event.obj['message']['from_id'],
            f"–ü—Ä–∏–≤–µ—Ç, {user_name}!\n–î–∞–≤–∞–π—Ç–µ –ø–æ–∏—â–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞!",
            keyboard=preferences_kb()
        )
        break

for event in longpoll.listen():
    if event.t == VkBotEventType.MESSAGE_NEW:
        send_message(
            event.obj['message']['from_id'],
            "–Ø —Å–µ–≥–æ–¥–Ω—è –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏. –ü–æ–æ–±—â–∞—Ç—å—Å—è –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.ü•∫\n–î–∞–≤–∞–π—Ç–µ, –≤—Å—ë-—Ç–∞–∫–∏, –ø–æ–∏—â–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞!",
            keyboard=preferences_kb()
        )

    if event.t == VkBotEventType.MESSAGE_EVENT:
        user_id = event.obj['user_id']

        # –®–∞–≥ 1: –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        ensure_user_exists(user_id)  # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ!

        # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        current_state = load_user_state(user_id)
        if not current_state:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            save_user_state(
                user_id=user_id,
                current_index=0,
                offset=0,
                candidates=[]
            )
            current_state = load_user_state(user_id)

        send_messageEvAns(
            event.obj.user_id,
            event.obj.peer_id,
            event.obj.event_id,
            event.obj.payload
        )

    if event.t == 'lead_forms_new':
        user_id = event.obj['user_id']
        send_message(user_id, '–ü–æ–¥–±–∏—Ä–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤', keyboard=view_kb())

        # –ü–æ–∏—Å–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —Ç–µ–∫—É—â–µ–≥–æ offset
        current_state = load_user_state(user_id)
        candidates = find_candidates(event.obj, offset=current_state.get('offset', 0))

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        save_user_state(
            user_id=user_id,
            current_index=0,
            offset=current_state.get('offset', 0),
            candidates=candidates
        )

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        current_state = load_user_state(user_id)
        candidates_count = len(current_state['candidates'])

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
        if str(candidates_count)[-1] == "1" and candidates_count != 11:
            send_message(user_id, f'–ù–∞–π–¥–µ–Ω {candidates_count} –∫–∞–Ω–¥–∏–¥–∞—Ç!')
        elif candidates_count // 10 == 1 or str(candidates_count)[-1] in "567890":
            send_message(user_id, f'–ù–∞–π–¥–µ–Ω–æ {candidates_count} –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤!')
        else:
            send_message(user_id, f'–ù–∞–π–¥–µ–Ω–æ {candidates_count} –∫–∞–Ω–¥–∏–¥–∞—Ç–∞!')

        # –í—ã–≤–æ–¥ –≤ —á–∞—Ç –ø–µ—Ä–≤–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
        send_current_candidate(user_id, 0)

        # –í–ª–æ–∂–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        for inner_event in longpoll.listen():
            current_state = load_user_state(user_id)

            if inner_event.t == VkBotEventType.MESSAGE_NEW:
                text = inner_event.obj['message']['text']

                # –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–ø–µ—Ä–µ–¥
                if 'üëâ' in text:
                    if current_state['current_index'] < len(current_state['candidates']) - 1:
                        new_index = current_state['current_index'] + 1
                        save_user_state(
                            user_id=user_id,
                            current_index=new_index,
                            offset=current_state['offset'],
                            candidates=current_state['candidates']
                        )
                        send_current_candidate(user_id, new_index)
                    else:
                        # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
                        new_offset = current_state['offset'] + 1000
                        new_candidates = find_candidates(event.obj, offset=new_offset)
                        if new_candidates:
                            updated_candidates = current_state['candidates'] + new_candidates
                            save_user_state(
                                user_id=user_id,
                                current_index=0,
                                offset=new_offset,
                                candidates=updated_candidates
                            )
                            send_current_candidate(user_id, 0)
                        else:
                            send_message(user_id, '–ö–∞–Ω–¥–∏–¥–∞—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!')

                # –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥
                elif 'üëà' in text:
                    if current_state['current_index'] == 0:
                        send_message(user_id, '–≠—Ç–æ –ø–µ—Ä–≤—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç. –í—ã –≤ –Ω–∞—á–∞–ª–µ —Å–ø–∏—Å–∫–∞')
                    else:
                        new_index = current_state['current_index'] - 1
                        save_user_state(
                            user_id=user_id,
                            current_index=new_index,
                            offset=current_state['offset'],
                            candidates=current_state['candidates']
                        )
                        send_current_candidate(user_id, new_index)

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                elif 'ü§™' in text:
                    current_candidate = send_current_candidate(
                        user_id,
                        current_state['current_index'],
                        True
                    )
                    if current_candidate:
                        save_favorite(
                            user_id=user_id,
                            first_name=current_candidate['first_name'],
                            last_name=current_candidate['last_name'],
                            vk_link=f"https://vk.com/id{current_candidate['id']}"
                        )
                        send_message(
                            user_id,
                            f"–ö–∞–Ω–¥–∏–¥–∞—Ç {current_candidate['first_name']} {current_candidate['last_name']} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!"
                        )

                # –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
                elif 'üòú' in text:
                    favorites = get_favorites_from_db(user_id)
                    if favorites:
                        favorites_list = "\n".join(
                            [f"{candidate['first_name']} {candidate['last_name']} - {candidate ['vk_link']}"
                             for candidate in favorites]
                        )
                        send_message(user_id, "–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤:\n" + favorites_list)
                    else:
                        send_message(user_id, "–í–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø—É—Å—Ç.")

                # –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                # elif 'ü§†' in text:
                #     send_message(user_id, '–°–ø–∏—Å–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —É–¥–∞–ª–µ–Ω—ã!')

                # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
                else:
                    send_message(user_id, '–°–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω!')